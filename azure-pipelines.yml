name: $(Build.SourceBranch)$(rev:.r)
trigger:
  - releases/*

pool:
  vmImage: 'windows-latest'

variables:
  rev: $[counter(variables['Build.SourceBranch'], 0)]

stages:
- stage: Build
  displayName: Build
  jobs:
    - job: SetBuildName
      steps:
        - powershell: Write-Host "##vso[build.updatebuildnumber]$env:Build_SourceBranchName.$env:rev"
          displayName: Setting build name for Release
          condition: contains(variables['Build.SourceBranch'], '/releases/')
        - powershell: Write-Host "##vso[build.updatebuildnumber]0.0.0-$env:Build_SourceBranchName.$env:rev"
          displayName: Setting build name for Dev
          condition: not(contains(variables['Build.SourceBranch'], '/releases/'))

    - job: Build
      dependsOn: SetBuildName
      steps:
      - script: npm install
      - script: tsc
      - powershell: (Get-Content ./package.json) | ForEach-Object { $_ -replace "0.0.0", "$(Build.BuildNumber)" } | Set-Content ./package.json
      - script: npm pack
      - task: PublishPipelineArtifact@1
        inputs:
         artifact: 'tarball'
         targetPath: 'guimabdo-webtyped-common-$(SetVersionStep.version).tgz'

- stage: Deploy
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'))
  dependsOn: Build
  displayName: Deploy stage
  jobs:
  - deployment: Deploy
    environment: npm-guimabdo-webtyped-common
    displayName: NPM - @guimabdo/webtyped
    strategy:
     runOnce:
       deploy:
         steps:
           - task: DownloadPipelineArtifact@2
             inputs:
               artifactName: 'version'
           - task: PowerShell@2
             inputs:

               targetType: 'inline'
               script: |
                 $v = Get-Content .\version.txt -Raw 
                 
                 echo "##vso[task.setvariable variable=version;isOutput=true]$v"
               workingDirectory: '$(Pipeline.Workspace)'
             name: 'SetVersionStep'
             displayName: 'Setting version'

           - task: DownloadPipelineArtifact@2
             inputs:
              artifactName: 'tarball'

           - task: Npm@1
             inputs:
               command: 'custom'
               workingDir: '$(Pipeline.Workspace)'
               customCommand: 'publish guimabdo-webtyped-common-$(Build.BuildNumber).tgz --access public'
               customEndpoint: 'npm - guimabdo'
